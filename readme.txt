Fatster react native documentation

React native, comme react.js est une nodejs based application, donc je suppose que vous avez dÃ©jÃ  installÃ© node.js sur votre ordinateur, sinon vous pouvez trouver lâ€™exÃ©cutable sur cette page web :  https://nodejs.org/en/download/ . Avec nodejs npm sera installÃ©, qui est le Â« node package manager Â» et Ã§a va servir Ã  installer les bibliothÃ¨ques nÃ©cessaires pour lâ€™exÃ©cution de lâ€™application. Toutes les bibliothÃ¨ques qui sont installÃ©es dans un nodejs based projet sont appelÃ©es dependencies et leur nom est enregistrÃ© dans le fichier package.json qui est stockÃ© dans la racine du projet.

Une fois que nodejs est installÃ© nous pouvons installer le react native environnement. Pour cela il faut tout dâ€™abord installer le cli, câ€™est-Ã -dire le Â« commande line interface Â» qui va nous servir Ã  exÃ©cuter les commandes dâ€™installation dâ€™une nouvelle application. Pour lâ€™installer il faut ouvrir un terminal sur Windows et exÃ©cuter la commande npm install -g react-native-cli . La flag -g signifie que ce package va Ãªtre installÃ© globalement sur votre ordinateur et nous pouvons lâ€™utiliser dans nâ€™importe quel dossier. Ensuite pour crÃ©er un nouveau projet nous pouvons exÃ©cuter la commande react-native init MyProject mais le problÃ¨me câ€™est que lâ€™Ã©quipe de Fatster utilise Typescript pour le dÃ©veloppement et cette commande va crÃ©er un projet un Javascript, donc non compatible avec lâ€™application principale. Pour transformer un projet javascript en typescript il faut que nous installions typescript dans le projet comme une dependency (une dÃ©pendance) et les types et pour cela il faut exÃ©cuter, aprÃ¨s la commande init que nous avons exÃ©cutÃ©e, la commande npm install -D typescript @types/jest @types/react @types/react-native @types/react-test-renderer. Ensuite il faut crÃ©er un fichier appelÃ© tsconfig.json , qui sert Ã  donner des instructions au typescript compiler, dans la racine de votre projet et dedans coller Ã§a : 
{
  "compilerOptions": {
    "allowJs": true,
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "isolatedModules": true,
    "jsx": "react",
    "lib": ["es6"],
    "moduleResolution": "node",
    "noEmit": true,
    "strict": true,
    "target": "esnext"
  },
  "exclude": [
    "node_modules",
    "babel.config.js",
    "metro.config.js",
    "jest.config.js"
  ]
}

Enfin il faut crÃ©er un fichier appelÃ© jest.config.js, dans la racine, et coller dedans Ã§a :
module.exports = {
  preset: 'react-native',
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node']
};

Jest est lâ€™application qui va exÃ©cuter votre app dans lâ€™Ã©mulateur ou dans un portable via USB.
Sinon vous pouvez toujours installer un template de react native en typescript qui va nous faire Ã§a automatiquement, mais Ã§a peut poser des problÃ¨mes, et câ€™est pour Ã§a que je prÃ©fÃ¨re vous expliquer dâ€™abord comment installer typescript sans le template. Pour cela il faut exÃ©cuter la commande : npm react-native init MyApp --template react-native-template-typescript. 
Plus de dÃ©tails sur react native et typescript dans ce lien : https://reactnative.dev/docs/typescript
Plus de dÃ©tails sur lâ€™installation sur ce lien : 
https://reactnative.dev/docs/environment-setup

Pour exÃ©cuter lâ€™application il y a deux solutions, sur un portable ou sur lâ€™Android emulator avec la commande npm run android. Je suppose que comme vous venez dâ€™une formation vous savez comment installer lâ€™emulator, sinon ici https://reactnative.dev/docs/environment-setup dans la section Â« Android development environment Â». Notez quâ€™il faut au moins 16G de RAM pour faire fonctionner lâ€™emulator, sinon vous pouvez exÃ©cuter lâ€™application sur un portable via USB. Les instructions sont ici : https://reactnative.dev/docs/running-on-device .

Dans la documentation officielle de react native vous allez voir quâ€™ils proposent Â« Expo Â» comme une autre solution pour installer et exÃ©cuter une application react native. Expo est un framework trÃ¨s puissant mais non utilisÃ© par lâ€™Ã©quipe Fatster, donc il ne faut pas lâ€™utiliser. 

Si malgrÃ© tout Ã§a vous nâ€™arrivez pas Ã  mettre en place un projet jâ€™ai mis Ã  votre disposition un projet sur GitHub prÃªt Ã  utiliser. Vous pouvez le trouver sur ce lien :
https://github.com/AnastasiosArvanitis/fatster_frontend_starter

Si vous avez Git dÃ©jÃ  installÃ© vous pouvez exÃ©cuter la commande : 
git clone https://github.com/AnastasiosArvanitis/fatster_frontend_starter.git dans un terminal, sinon vous pouvez tÃ©lÃ©charger le projet en format zip un appuyant sur le bouton vert, ou câ€™est marquÃ© Â« Code Â»,  que vous allez voir sur la page GitHub du repo mentionnÃ© prÃ©cÃ©demment. Une fois que le projet est sur votre ordinateur il faut exÃ©cuter la commande npm install dans un terminal qui est dans la racine du projet pour installer tous les dÃ©pendances, il faut donc avoir installÃ© nodejs avant en tout cas. Dans ce projet il y a dÃ©jÃ  installÃ© Redux et Redux-saga, comme lâ€™Ã©quipe de dÃ©veloppeurs chez Fatster font pour gÃ©rer le state global et il y a un exemple dâ€™utilisation. Je vous encourage donc mÃªme si vous nâ€™utilisez pas ce projet de le regarder. Il vaut mieux regarder le Â« History Â» du projet sur GitHub pour voir avec quel ordre jâ€™ai crÃ©Ã© les fichiers du Redux-saga.
Dans ce repo vous allez trouver Ã©galement un simple de lâ€™architecture que les devs chez Fatster ont mis en place, donc en tout cas câ€™est bien de jeter un coup dâ€™Å“il.

Use full links:
https://reactnative.dev/docs/typescript
https://reactnative.dev/docs/intro-react
https://www.freecodecamp.org/news/redux-for-beginners-the-brain-friendly-guide-to-redux/
https://kapeli.com/cheat_sheets/Axios.docset/Contents/Resources/Documents/index
https://medium.com/@KevinBGreene/surviving-the-typescript-ecosystem-working-with-types-and-type-definitions-3539baf26627
https://lodash.com/
https://blog.bitsrc.io/top-10-react-hook-libraries-ca284ab3ae1d
trÃ¨s important pour saga:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*
https://redux-saga.js.org/docs/introduction/GettingStarted

Bon courage ğŸ˜Š


npx react-native init AwesomeProject
npm install -D typescript @types/jest @types/react @types/react-native @types/react-test-renderer
npm install --save axios
npm install redux react-redux --save
npm install @types/react-redux --save
npm install redux-saga --save
npm install --save redux-actions
npm i --save-dev @types/redux-actions

